
#sync code:

aero_sync agent_id(last number of ip)


-------------------------------------------------------------------------------


#One UAV:
#on uav (change the appropriate IDs), wait for 20 seconds to initializw parameters
roslaunch intel_aero_experiments intel_aero_live_one_uav_line.launch id:=4


-------------------------------------------------------------------------------


#Parameters (speed, height, etc.)
#set PX parameters (do not need to do it all the time - just do once):

roslaunch intel_aero_experiments mavros_params.launch id:=id

#check that parameters were loaded
rosrun mavros mavparam -v -n aero7/mavros get MPC_XY_VEL_MAX


-------------------------------------------------------------------------------
#Assuming server and dest is 10.42.0.4, source is 10.42.0.7
#Robust routing line test

#source ta (10.42.0.7):
roslaunch intel_aero_experiments intel_aero_live.launch dest_arg:="10.42.0.4" server:=false srv:="10.42.0.4"

#network agents (10.42.0.6):
roslaunch intel_aero_experiments intel_aero_live.launch server:=false srv:="10.42.0.4"

#server aero (10.42.0.4):
roslaunch intel_aero_experiments intel_aero_live.launch server:="true"
roslaunch intel_aero_experiments line_server.launch
#OR, if testing in the office, instead on line_server.launch run (check the parameters first)
roslaunch network_planner routing.launch


#line server starts the networp planner, NP has 5 second countdown before it starts NA
#Patroling TA (10.42.0.7):

rosrun intel_aero_demos line_demo



-------------------------------------------------------------------------------



#testing demo in gazeebo

roslaunch intel_aero_demos line.launch

rosrun intel_aero_demos line_demo _nav_nodelet:=gazebo_vel_nav_nodelet




#record rosbag in demo:
line_rosbag #change the parameters inside the file accroding to ids in line_demo
