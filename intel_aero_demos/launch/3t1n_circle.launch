<launch>

  <!-- simulation args -->
  <arg name="gazebo_gui"  default="false" />
  <arg name="rviz"        default="true" />
  <arg name="network_viz" default="true"/>

  <!-- patrol demo args -->
  <arg name="task_agent_velocity"    default="1.0"/>  <!-- m/s -->
  <arg name="network_agent_velocity" default="2.0"/>  <!-- m/s -->
  <arg name="collision_distance"     default="4.0"/>  <!-- m -->
  <arg name="heading_tol"            default="3.5"/>  <!-- > pi : agents don't turn before moving -->
  <arg name="minimum_update_rate"    default="5"/>   <!-- Hz -->
  <arg name="patrol_radius"          default="20.0"/> <!-- radius of patrol circle -->
  <arg name="planner_type"           default="moving"/> <!-- fixed, moving -->
  <arg name="print_routes"           default="false"/>

  <rosparam command="load" file="$(find intel_aero_demos)/config/3t1n_circle_patrol.yaml"/>
  <param name="/patrol_radius"       value="$(arg patrol_radius)"/>

  <!-- gazebo and rviz -->
  <include file="$(find intel_aero_gazebo)/launch/simulation.launch">
    <arg name="gazebo_gui"       value="$(arg gazebo_gui)"/>
    <arg name="world"            value="worlds/empty.world"/>
    <arg name="rviz"             value="$(arg rviz)"/>
    <arg name="rviz_config_file" value="$(find intel_aero_demos)/rviz/patrol.rviz"/>
  </include>

  <!-- load saved map -->
  <node pkg="map_server"
        type="map_server"
        name="static_map_node"
        args="$(find intel_aero_gazebo)/maps/empty.yaml">
    <remap from="map"      to="/projected_map"/>
    <param name="frame_id" value="world"/>
  </node>

  <!-- network topology visualization -->
  <node pkg="network_status"
        type="routing_visualization_node"
        name="routing_visualization_node"
        output="screen">
    <param name="world_frame"       value="world"/>
    <param name="pose_topic_prefix" value="/"/>
    <param name="pose_topic_suffix" value="/pose"/>
  </node>

  <!-- network planner -->
  <node pkg="intel_aero_demos"
        type="network_planner_node"
        name="connectivity_network_planner"
        output="screen">
    <param name="collision_distance"    value="$(arg collision_distance)"/>
    <param name="minimum_update_rate"   value="$(arg minimum_update_rate)"/>
    <param name="pose_topic"            value="/aero#/pose"/>
    <param name="nav_nodelet"           value="/aero#/gazebo_vel_nav_nodelet"/>
    <param name="world_frame"           value="world"/>
    <param name="planner_type"          value="$(arg planner_type)"/>
    <param name="print_routes"          value="$(arg print_routes)"/>
  </node>

<<<<<<< HEAD:intel_aero_demos/launch/3t1n_circle.launch
<<<<<<< HEAD:intel_aero_demos/launch/3t1n_circle.launch
=======
=======
>>>>>>> 48fd98a1d18d9ec7326f4a3ee5f141e71ca1d81b:intel_aero_demos/launch/3_task_1_network.launch

  <node pkg="socp"
        type="rr_socp_server.py"
        name="robust_routing_socp_server"
        output="screen"/>

>>>>>>> restructuring python-based roslaunch scripts:intel_aero_demos/launch/3_task_1_network.launch
  <!-- task (patrol) agents -->

  <group>
    <arg name="id" value="1"/>
    <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
      <arg name="id"             value="$(arg id)"/>
      <arg name="x"              value="$(eval arg('patrol_radius')*cos(2.0*3.141592/3.0*(arg('id')-1)))"/>
      <arg name="y"              value="$(eval arg('patrol_radius')*sin(2.0*3.141592/3.0*(arg('id')-1)))"/>
      <arg name="linear_vel_des" value="$(arg task_agent_velocity)"/>
      <arg name="heading_tol"    value="$(arg heading_tol)"/>
    </include>
  </group>

  <group>
    <arg name="id" value="2"/>
    <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
      <arg name="id"             value="$(arg id)"/>
      <arg name="x"              value="$(eval arg('patrol_radius')*cos(2.0*3.141592/3.0*(arg('id')-1)))"/>
      <arg name="y"              value="$(eval arg('patrol_radius')*sin(2.0*3.141592/3.0*(arg('id')-1)))"/>
      <arg name="linear_vel_des" value="$(arg task_agent_velocity)"/>
      <arg name="heading_tol"    value="$(arg heading_tol)"/>
    </include>
  </group>

  <group>
    <arg name="id" value="3"/>
    <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
      <arg name="id"             value="$(arg id)"/>
      <arg name="x"              value="$(eval arg('patrol_radius')*cos(2.0*3.141592/3.0*(arg('id')-1)))"/>
      <arg name="y"              value="$(eval arg('patrol_radius')*sin(2.0*3.141592/3.0*(arg('id')-1)))"/>
      <arg name="linear_vel_des" value="$(arg task_agent_velocity)"/>
      <arg name="heading_tol"    value="$(arg heading_tol)"/>
    </include>
  </group>

  <!-- network agents -->

  <group>
    <arg name="id" value="4"/>
    <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
      <arg name="id"             value="$(arg id)"/>
      <arg name="x"              value="7.0"/>
      <arg name="y"              value="7.0"/>
      <arg name="linear_vel_des" value="$(arg network_agent_velocity)"/>
      <arg name="heading_tol"    value="$(arg heading_tol)"/>
    </include>
  </group>

</launch>
