<launch>

  <!-- optional simulation args -->
  <arg name="sim"                    default="false"/>
  <arg name="gazebo_gui"             default="false"/>
  <arg name="rviz"                   default="true"/>
  <arg name="task_agent_velocity"    default="0.5"/>
  <arg name="network_agent_velocity" default="1.0"/>

  <arg name="nav_nodelet"            default="gazebo_vel_nav_nodelet" if="$(arg sim)"/>
  <arg name="nav_nodelet"            default="px4_waypoint_navigation_nodelet" unless="$(arg sim)"/>

  <!-- line demo args -->
  <arg name="network_node_type"      default="planning"/> <!-- options: planning, routing (network nodes don't fly) -->
  <arg name="sample_count"           default="2500"/>
  <arg name="sample_variance"        default="0.5"/>
  <arg name="margin"                 default="0.15"/> <!-- [0 1] -->
  <arg name="confidence"             default="0.8"/>  <!-- (0.5 1) -->
  <arg name="collision_distance"     default="1.5"/>  <!-- m -->
  <arg name="heading_tol"            default="3.5"/>  <!-- > pi : agents don't turn before moving -->
  <arg name="minimum_update_rate"    default="2"/>    <!-- Hz -->
  <arg name="net_x0"                 default="4.0"/>
  <arg name="net_y0"                 default="4.0"/>
  <arg name="net_xf"                 default="23.0"/>
  <arg name="net_yf"                 default="11.0"/>
  <arg name="desired_altitude"       default="3.0"/>

  <!-- line demo params -->
  <!-- active drones: [T] 1, 2, 5, [N] 10, 11 -->
  <rosparam param="/source_nodes">[1,5]</rosparam>
  <rosparam param="/destination_nodes">[2,2]</rosparam>
  <rosparam param="/task_agent_ids">[1,2,5]</rosparam> <!-- needed for task agent count -->
  <rosparam param="/comm_agent_ids">[10,11]</rosparam> <!-- needed for network agent count -->
  <param name="/desired_altitude" value="$(arg desired_altitude)"/>
  <param name="/net_x0"           value="$(arg net_x0)"/>
  <param name="/net_y0"           value="$(arg net_y0)"/>
  <param name="/net_xf"           value="$(arg net_xf)"/>
  <param name="/net_yf"           value="$(arg net_yf)"/>
  <param name="/safety_x_min"     value="$(eval arg('net_x0') + arg('collision_distance'))"/>
  <param name="/safety_y_min"     value="$(eval arg('net_y0') + arg('collision_distance'))"/>
  <param name="/safety_x_max"     value="$(eval arg('net_xf') - arg('collision_distance'))"/>
  <param name="/safety_y_max"     value="$(eval arg('net_yf') - arg('collision_distance'))"/>

  <!-- channel rate model params -->
  <param name="/N0" value="-70.0"/> <!-- -85.0  receiver noise (dBm) -->
  <param name="/n"  value="2.52"/>  <!--   2.52 decay exponent -->
  <param name="/L0" value="-48.0"/> <!-- -53.0  transmit power (dBm) -->
  <param name="/a"  value="0.2"/>   <!--   0.2  variance sigmoid param 1 -->
  <param name="/b"  value="0.6"/>   <!--   0.6  variance sigmoid param 2 -->

  <!-- gazebo and rviz -->
  <include if="$(arg sim)" file="$(find intel_aero_gazebo)/launch/simulation.launch">
    <arg name="gazebo_gui"       value="$(arg gazebo_gui)"/>
    <arg name="world"            value="worlds/empty.world"/>
    <arg name="rviz"             value="$(arg rviz)"/>
    <arg name="rviz_config_file" value="$(find intel_aero_demos)/rviz/net_patrol.rviz"/>
  </include>

  <!-- network topology visualization -->
  <node pkg="network_status"
        type="routing_visualization_node"
        name="routing_visualization_node"
        output="screen">
    <param name="world_frame"       value="world"/>
    <param name="pose_topic"        value="pose"/>
  </node>

  <!-- network planner nodes -->

  <node pkg="intel_aero_experiments"
        type="network_planner_net_patrol_node"
        name="network_planner_net_patrol_node"
        output="screen">
    <param name="sample_count"        value="$(arg sample_count)"/>
    <param name="sample_variance"     value="$(arg sample_variance)"/>
    <param name="margin"              value="$(arg margin)"/>
    <param name="confidence"          value="$(arg confidence)"/>
    <param name="collision_distance"  value="$(arg collision_distance)"/>
    <param name="minimum_update_rate" value="$(arg minimum_update_rate)"/>
    <param name="pose_topic"          value="pose"/>
    <param name="nav_nodelet"         value="$(arg nav_nodelet)"/>
    <param name="world_frame"         value="world"/>
    <param name="network_node_type"   value="$(arg network_node_type)"/>
  </node>

  <!--
      simulated agents if running a simulation
   -->

  <group if="$(arg sim)">

    <!-- task (line) agents -->

    <group>
      <arg name="id" value="2"/>
      <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
        <arg name="id"             value="$(arg id)"/>
        <arg name="x"              value="0.0"/>
        <arg name="y"              value="$(eval (arg('net_yf')+arg('net_y0'))/2.0)"/>
        <arg name="linear_vel_des" value="$(arg task_agent_velocity)"/>
        <arg name="heading_tol"    value="$(arg heading_tol)"/>
      </include>
    </group>

    <group>
      <arg name="id" value="1"/>
      <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
        <arg name="id"             value="$(arg id)"/>
        <arg name="x"              value="$(arg net_x0)"/>
        <arg name="y"              value="$(arg net_y0)"/>
        <arg name="linear_vel_des" value="$(arg task_agent_velocity)"/>
        <arg name="heading_tol"    value="$(arg heading_tol)"/>
      </include>
    </group>

    <group>
      <arg name="id" value="5"/>
      <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
        <arg name="id"             value="$(arg id)"/>
        <arg name="x"              value="$(arg net_xf)"/>
        <arg name="y"              value="$(arg net_yf)"/>
        <arg name="linear_vel_des" value="$(arg task_agent_velocity)"/>
        <arg name="heading_tol"    value="$(arg heading_tol)"/>
      </include>
    </group>

    <!-- network agents -->

    <group>
      <arg name="id" value="10"/>
      <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
        <arg name="id"             value="$(arg id)"/>
        <arg name="x"              value="$(eval (arg('net_xf')+arg('net_x0'))/2.0 - 3.0)"/>
        <arg name="y"              value="$(eval (arg('net_yf')+arg('net_y0'))/2.0)"/>
        <arg name="linear_vel_des" value="$(arg network_agent_velocity)"/>
        <arg name="heading_tol"    value="$(arg heading_tol)"/>
      </include>
    </group>

    <group>
      <arg name="id" value="11"/>
      <include file="$(find intel_aero_gazebo)/launch/intel_aero_spawn_only.launch">
        <arg name="id"             value="$(arg id)"/>
        <arg name="x"              value="$(eval (arg('net_xf')+arg('net_x0'))/2.0 + 3.0)"/>
        <arg name="y"              value="$(eval (arg('net_yf')+arg('net_y0'))/2.0)"/>
        <arg name="linear_vel_des" value="$(arg network_agent_velocity)"/>
        <arg name="heading_tol"    value="$(arg heading_tol)"/>
      </include>
    </group>

  </group>

</launch>
