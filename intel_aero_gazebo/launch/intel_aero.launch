<launch>

  <arg name="id"                 default="1" />
  <arg name="robot_radius"       default="1.0"/>
  <arg name="inflation_radius"   default="0.2"/>
  <arg name="octomap_resolution" default="0.2"/>
  <arg name="static_map"         default="false"/> <!-- true: a static map will be provided -->
  <arg name="static_map_topic"   default="projected_map"/>

  <arg name="robot_ns"    value="aero$(arg id)" />
  <arg name="world_frame" default="world"/>
  <arg name="map_frame"   default="$(arg robot_ns)/map"/>
  <arg name="base_frame"  default="$(arg robot_ns)/base_link"/>

  <arg name="costmap_rate"  if="$(arg static_map)"     value="0.1"/>
  <arg name="costmap_rate"  unless="$(arg static_map)" value="2.0"/>
  <arg name="costmap_frame" if="$(arg static_map)"     value="$(arg world_frame)"/>
  <arg name="costmap_frame" unless="$(arg static_map)" value="$(arg map_frame)"/>

  <!-- URDF -->
  <arg name="aero_urdf" value="$(find intel_aero_description)/urdf/intel_aero.xacro" />
  <arg name="xacro_args" value="namespace:=$(arg robot_ns) mavlink_udp_port:=$(arg mavlink_udp_port)" />

  <!-- spawn pose -->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0" />
  <arg name="R" default="0" />
  <arg name="P" default="0" />
  <arg name="Y" default="0" />
  <arg name="pos_args" value="-x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)" />

  <!-- SITL config -->
  <arg name="ground_truth"          default="true" />
  <arg name="mavlink_udp_port"      default="14560" />
  <arg name="fcu_url"               default="udp://:14541@localhost:14551" />
  <arg name="interactive"           default="true" />
  <arg name="startup_config"        value="$(find intel_aero_gazebo)/SITL/aero_$(arg id)" />
  <arg unless="$(arg interactive)"  name="px4_cmd_arg" value=""/>
  <arg if="$(arg interactive)"      name="px4_cmd_arg" value="-d"/>

  <group ns="$(arg robot_ns)" >

    <!-- load intel aero urdf to param -->
    <param name="robot_description" command="$(find xacro)/xacro -i $(arg aero_urdf) $(arg xacro_args)" />

    <!-- spawn Intel Aero -->
    <node name="spawn_model"
          pkg="gazebo_ros"
          type="spawn_model"
          output="screen"
          args="-urdf -param robot_description -model $(arg robot_ns) $(arg pos_args)" />

    <!-- static transform to offset robot spawn position -->
    <node pkg="tf2_ros"
          type="static_transform_publisher"
          name="offset_broadcaster"
          args="$(arg x) $(arg y) $(arg z) $(arg Y) $(arg P) $(arg R) $(arg world_frame) $(arg map_frame)"/>

    <!-- publish joint states to tf -->
    <node name="robot_state_publisher"
          pkg="robot_state_publisher"
          type="robot_state_publisher" />
    <node name="join_state_publisher"
          pkg="joint_state_publisher"
          type="joint_state_publisher" />

    <!-- PX4 SITL -->
    <node name="$(arg robot_ns)_sitl"
          pkg="px4"
          type="px4"
          output="screen"
          args="$(find px4) $(arg startup_config) $(arg px4_cmd_arg)" />

    <!-- MAVROS -->
    <node pkg="mavros"
          type="mavros_node"
          name="mavros"
          clear_params="true"
          output="screen"
          respawn="false">
      <param name="fcu_url" value="$(arg fcu_url)" />
      <param name="gcs_url" value="" />
      <param name="target_system_id" value="$(arg id)" />
      <param name="target_component_id" value="1" />
      <rosparam command="load" file="$(find mavros)/launch/px4_pluginlists.yaml" />
      <rosparam command="load" file="$(find intel_aero_gazebo)/SITL/px4_common.yaml" />
      <param name="local_position/frame_id"          value="$(arg map_frame)"/>
      <param name="local_position/tf/frame_id"       value="$(arg map_frame)"/>
      <param name="local_position/tf/child_frame_id" value="$(arg base_frame)"/>
      <param name="global_position/child_frame_id"   value="$(arg base_frame)"/>
      <param name="imu/frame_id"                     value="$(arg base_frame)"/>
    </node>

    <!-- mapping using octomap -->
    <node unless="$(arg static_map)"
          name="octomap_server"
          pkg="octomap_server"
          type="octomap_server_node"
          required="true">
      <remap from="cloud_in" to="camera/depth/points" />
      <param name="frame_id" value="$(arg map_frame)" />
      <param name="base_frame_id" value="$(arg base_frame)" />
      <param name="resolution" value="$(arg octomap_resolution)" />
      <param name="pointcloud_min_z" value="1.0" />
    </node>

    <!-- costmap generation -->
    <node pkg="costmap_2d"
          name="costmap_2d"
          type="costmap_2d_node">
      <param name="costmap/global_frame"      value="$(arg costmap_frame)" />
      <param name="costmap/robot_base_frame"  value="$(arg base_frame)" />
      <param name="costmap/map_topic"         value="$(arg static_map_topic)" />
      <param name="costmap/inflation_radius"  value="$(arg inflation_radius)"/>
      <param name="costmap/robot_radius"      value="$(arg robot_radius)"/>
      <param name="costmap/publish_frequency" value="$(arg costmap_rate)"/>
      <rosparam ns="costmap">
        transform_tolerance: 0.3
        update_frequency: 2.0
        static_map: true
        always_send_full_costmap: true
        map_type: costmap
      </rosparam>
    </node>

    <node pkg="nodelet"
          type="nodelet"
          name="waypoint_navigation_nodelet"
          args="standalone intel_aero_navigation/WaypointNavigationNodelet"
          output="screen">
      <remap from="costmap" to="costmap_2d/costmap/costmap" />
      <remap from="odom" to="mavros/local_position/odom" />

      <param name="local_frame"   value="$(arg map_frame)"/>
      <param name="costmap_frame" value="$(arg costmap_frame)"/>
      <param name="world_frame"   value="$(arg world_frame)"/>
      <param name="position_tol"  value="0.2" />
      <param name="yaw_tol"       value="0.2" />
    </node>
    <!--
    <node pkg="intel_aero_navigation"
          type="waypoint_navigation_node"
          name="waypoint_navigation_node"
          output="screen">
      <remap from="costmap" to="costmap_2d/costmap/costmap" />
      <remap from="odom" to="mavros/local_position/odom" />

      <param name="local_frame"   value="$(arg map_frame)"/>
      <param name="costmap_frame" value="$(arg costmap_frame)"/>
      <param name="world_frame"   value="$(arg world_frame)"/>
      <param name="position_tol"  value="0.2" />
      <param name="yaw_tol"       value="0.2" />
    </node>
    -->

  </group>

</launch>
